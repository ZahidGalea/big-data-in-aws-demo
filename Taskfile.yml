version: "3"

vars:
  TFPLAN: .tfplan

# With AWS Credentials
dotenv: [ '.env' ]

tasks:
  tests:
    preconditions:
      - test -f .env
      - test -n $AWS_SECRET_ACCESS_KEY
      - test -n $AWS_ACCESS_KEY_ID
  
  infrastructure:init:
    deps: [ tests ]
    dir: infrastructure/aws-bigdata-demo
    desc: Init terraform
    cmds:
      - terraform init

  infrastructure:plan:
    deps: [ infrastructure:init, tests ]
    dir: infrastructure/aws-bigdata-demo
    desc: Show terraform resources creation
    cmds:
      - terraform plan -out={{.TFPLAN}}

  infrastructure:apply:
    deps: [ infrastructure:plan, tests ]
    dir: infrastructure/aws-bigdata-demo
    desc: Apply resources creation
    cmds:
      - terraform apply "{{.TFPLAN}}"
  
  application:cdc-app-as-submodule-update:
    desc: Downloads the repository
    cmds:
      - git submodule update
  
  application:generate-app:
    deps: [ tests, application:cdc-app-as-submodule-update ]
    desc: Creates the application in minikube
    cmds:
      - /bin/bash ./init_kafka_app.sh
  
  application:kafka-to-kinesis:
    deps: [ tests ]
    desc: Creates the application in minikube
    cmds:
      - eval $(minikube docker-env); docker build -t=kafka-to-kinesis-app:latest kafka-consumer/
      - kubectl apply -f kafka-consumer/kafka-to-kinesis.yml

